// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id             Int        @id @default(autoincrement())
  cpf            String?
  telefone       String?
  nome           String?
  aluno          Aluno?     @relation(fields: [alunoId], references: [id])
  alunoId        Int?       @unique
  professor      Professor? @relation(fields: [professorId], references: [id])
  professorId    Int?       @unique
  senha          String
  email          String     @unique
  dataNascimento DateTime?
  type           String?

}

model Aluno {
  id          Int         @id @default(autoincrement())
  treinos     Treino[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  profile     Profile?
  professores Professor[]
  // Professores    ProfessoresAlunos[]
}

model Professor {
  id        Int      @id @default(autoincrement())
  creef     String?
  treinos   Treino[]
  profile   Profile?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Alunos         ProfessoresAlunos[]
  alunos    Aluno[]
}

// model ProfessoresAlunos {
//   aluno       Aluno     @relation(fields: [alunoId], references: [id])
//   alunoId     Int
//   professor   Professor @relation(fields: [professorId], references: [id])
//   professorId Int
//   assignedAt  DateTime  @default(now())

//   @@id([alunoId, professorId])
// }

model Treino {
  id             Int         @id @default(autoincrement())
  nome           String      @db.VarChar(255)
  aluno          Aluno?      @relation(fields: [alunoId], references: [id])
  alunoId        Int?
  professor      Professor   @relation(fields: [professorId], references: [id])
  professorId    Int
  exercicios     Exercicio[]
  descricao String?          @db.Text
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model Exercicio {
  id        Int            @id @default(autoincrement())
  nome      String         @db.VarChar(255)
  descricao String?        @db.Text
  video     String?        @db.VarChar(255)
  tipo      TipoExercicio  @relation(fields: [tipoId], references: [id])
  tipoId    Int
  treinos   Treino[]
  imagem    String?
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

//For√ßa, resisitencia,
model TipoExercicio {
  id        Int         @id @default(autoincrement())
  nome      String      @db.Char(11)
  descricao String      @db.VarChar(255)
  exercicio Exercicio[]
}

//tipo de serio como lenta excentrica ou algo do tipo
model Execucao {
  id        Int    @id @default(autoincrement())
  descricao String @db.VarChar(255)
}
